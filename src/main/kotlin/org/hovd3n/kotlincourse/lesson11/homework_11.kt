package org.hovd3n.kotlincourse.lesson11

fun main() {

//Задание 1: Создание Пустого Словаря
//Создайте пустой неизменяемый словарь, где ключи и значения - целые числа.
    val pair: Map<Int, Int> = mapOf()

//Задание 2: Создание и Инициализация Словаря
//Создайте словарь, инициализированный несколькими парами "ключ-значение",
// где ключи - float, а значения - double
    val pair1: Map<Float, Double> = mapOf(22.3f to 22.3, 10.0f to 10.0, 7.4f to 7.4)

//Задание 3: Создание Изменяемого Словаря
//Создайте изменяемый словарь, где ключи - целые числа, а значения - строки.
    val pair2: MutableMap<Int, String> = mutableMapOf(1 to "Один", 2 to "Два", 3 to "Три")

//Задание 4: Добавление Элементов в Словарь
//Имея изменяемый словарь, добавьте в него новые пары "ключ-значение".
    pair2[4] = "Четыре"
    pair2[10] = "Десять"

//Задание 5: Получение Значений из Словаря
//Используя словарь из предыдущего задания, извлеките значение, используя ключ.
// Попробуй получить значение с ключом, которого в словаре нет.
    println("Задание 5")
    println(pair2[2])
    println(pair2[7])

//Задание 6: Удаление Элементов из Словаря
//Удалите определенный элемент из изменяемого словаря по его ключу.
    pair2.remove(3)


//Задание 7: Перебор Словаря в Цикле
//Создайте словарь (ключи Double, значения Int) и выведи в цикле результат деления ключа на значение.
// Не забудь обработать деление на 0 (в этом случае выведи слово “бесконечность”)
    println("Задание 7")
    val pair3 = mapOf(0.0 to 0, 5.3 to 5, 6.0 to 6, 10.8 to 11)
    for ((key, value) in pair3) {
        if (value == 0) println("бесконечность")
            else println(key / value)
    }

//Задание 8: Перезапись Элементов Словаря
//Измените значение для существующего ключа в изменяемом словаре.
    println("Задание 8")
    val pair4 = mutableMapOf(2 to "hi", 5 to "hello", 9 to "gamarjoba")
    pair4[9] = "good morning"
    println((pair4[9]))

//Задание 9: Сложение Двух Словарей
//Создайте два словаря и объедините их в третьем изменяемом словаре через циклы.
    println("Задание 9")
    val pair5 = mapOf("Russia" to "Moscow", "Portugal" to "Lisbon")
    val pair6 = mapOf("Japan" to "Tokyo", "China" to "Beijing")
    val sumPair: MutableMap<String, String> = mutableMapOf()
        for ((key, value) in pair5){
            sumPair[key] = value
        }
        for ((key, value) in pair6){
            sumPair[key] = value
        }
    println(sumPair)

//Задание 10: Словарь с Сложными Типами
//Создайте словарь, где ключами являются строки, а значениями - списки целых чисел.
// Добавьте несколько элементов в этот словарь.
    println("Задание 10")
    val pair7: Map<String, List<Int>> = mapOf(
        "Дни рождения коллег" to listOf(2, 5, 10),
        "Дни рождения родственников" to listOf(8, 15, 25),
        "Дни рождения домашних питомцев" to listOf(9, 31)
    )
    println(pair7)

//Задание 11: Использование Множества в Качестве Значения
//Создай словарь, в котором ключи - это целые числа, а значения - изменяемые множества строк.
// Добавь данные в словарь. Получи значение по ключу (это должно быть множество строк)
// и добавь в это множество ещё строку. Распечатай полученное множество.
    println("Задание 11")
    val map1 = mutableMapOf<Int, MutableSet<String>>()
    map1[1] = mutableSetOf("Тили-тили", "трали-вали")
    map1[2] = mutableSetOf("Это мы", "не проходили")
    println(map1[1])
    println(map1[2])
    map1[2]?.add("это нам не задавали") // тут была проверка на null и добавление еще строки
    println(map1[1])
    println(map1[2])

//Задание 12: Поиск Элемента по Значению
//Создай словарь, где ключами будут пары чисел.
// Через перебор найди значение у которого пара будет содержать цифру 5 в качестве первого или второго значения.
    println("Задание 12")
    val map2 = mapOf(Pair(1,5) to "Value1", Pair(3,8) to "Value2", Pair(5,4) to "Value3")
        for ((key, value) in map2) {
            if (key.first == 5 || key.second == 5)
                println("Найдено $key: $value")
            else println("Нужного значения не найдено")
    }


//======
//Напиши решения задач. В каждом случае нужно проанализировать и подобрать оптимальный тип словаря.
//Задание 6: Словарь Библиотека
//Ключи - автор книги, значения - список книг
    val biblio = mutableMapOf("Автор" to mutableListOf("Название книги 1", "Название книги 2"))

//Задание 12: Справочник Растений
//Ключи - типы растений (например, "Цветы", "Деревья"), значения - списки названий растений
    val bioSpravka = mapOf("Тип растения" to mutableListOf("Растение 1", "Растение 2"))

//Задание 8: Четвертьфинала
//Ключи - названия спортивных команд, значения - списки игроков каждой команды
    val sportTeams = mutableMapOf("Название команды" to mutableListOf("Player 1", "Player 2", "Player 3"))
    // должен быть именно изменениемый ключ, потому что команды могут вылетать
    // из одного чемпионата в низшую лигу, вместо них поднимаются другие команды

//Задание 9: Курс лечения
//Ключи - даты, значения - список препаратов принимаемых в дату
    val course = mutableMapOf("Дата" to mutableListOf("Препорат 1", "Препорат 2", "Препорат 3"))
    // даты могут сократиться, если лечение идет хорошо или наоборот

//Задание 10: Словарь Путешественника
//Ключи - страны, значения - словари из городов со списком интересных мест.
    val trips = mapOf("Страна" to mapOf("Название города" to listOf("Интересное место 1", "Интересное место 2")))

}